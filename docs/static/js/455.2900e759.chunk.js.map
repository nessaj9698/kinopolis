{"version":3,"file":"static/js/455.2900e759.chunk.js","mappings":"sIAgCA,MACA,EAAe,IAA0B,+D,2FCnBlC,MAAMA,EAAYC,IAIX,IAJY,eACxBC,EAAc,oBACdC,EAAmB,QACnBC,GACMH,EACN,MAAOI,EAAQC,IAAWC,EAAAA,EAAAA,WAAkB,KAC1C,MAAMC,EAAcC,aAAaC,QAAQ,eACzC,GAAIF,EAAa,CAEf,OADuBG,KAAKC,MAAMJ,GACZK,SAAST,EACjC,CACA,OAAO,CAAK,IAERU,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,mBACrBC,GCvBOC,EAAAA,EAAAA,IAAeC,EAAAA,MAMrB,EDsCP,OACEC,EAAAA,EAAAA,KAAA,OACEC,MAAM,6BACNC,QAAQ,YACRC,MAAM,KACNC,OAAO,KACPC,KAAMpB,EAAS,OAAS,OACxBqB,OAAO,OACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACfC,QA9BiBC,IACnBA,EAAEC,iBAEE3B,EACFF,IAEAD,IAGEe,KACFgB,EAAAA,EAAAA,IAAuB7B,GACvBE,GAASD,IAGPS,GAAkB,OAAPA,QAAO,IAAPA,GAAAA,EAASoB,qBACtBpB,EAAQoB,qBACV,EAcuBC,UAErBf,EAAAA,EAAAA,KAAA,QAAMgB,EAAE,uKACJ,C,kCE9DV,QAA2B,2B,gECA3B,QAA4B,6B,aCcrB,MAAMC,EAAYpC,IAAkC,IAAjC,GAAEqC,EAAE,KAAEC,EAAI,OAAEC,GAAevC,EACnD,MAAMwC,GAASvB,EAAAA,EAAAA,IAAewB,EAAAA,IACxBxC,GAAiByC,EAAAA,EAAAA,cAAY,KAC7BF,IACFG,EAAAA,EAAAA,IAAgBH,EAAQ,cAAeH,EACzC,GACC,CAACG,IAEEtC,GAAsBwC,EAAAA,EAAAA,cAAY,KAClCF,IACFI,EAAAA,EAAAA,IAAqBJ,EAAQ,cAAeH,EAC9C,GACC,IACH,OACElB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACC,GAAE,UAAAC,OAAYV,GAAKH,UACvBc,EAAAA,EAAAA,MAAA,WAASC,UAAWC,EAAYhB,SAAA,EAC9Bf,EAAAA,EAAAA,KAAA,OAAKgC,IAAKZ,EAAOa,YAAcC,EAAAA,KAC/BlC,EAAAA,EAAAA,KAAA,MAAAe,SAAKI,IACJE,IACCrB,EAAAA,EAAAA,KAACpB,EAAAA,EAAS,CACRE,eAAgBA,EAChBC,oBAAqBA,EACrBC,QAASmD,OAAOjB,SAIjB,ECpCEkB,EAAWvD,IAAkC,IAAjC,KAAEwD,GAAyBxD,EAClD,OACEmB,EAAAA,EAAAA,KAAA,OAAK8B,UAAWC,EAAWhB,SACxBsB,EAAKC,KAAKC,IACTvC,EAAAA,EAAAA,KAACiB,EAAS,CACRC,GAAIqB,EAAMrB,GACVC,KAAMoB,EAAMpB,KACZC,OAAQmB,EAAMnB,QACTmB,EAAMrB,OAGX,C,kHCbH,MAAMsB,EAAiCA,KAC5C,MAAMpD,GAAcqD,EAAAA,EAAAA,IAAc,eAElC,OAD0BC,EAAAA,EAAAA,IAAqBtD,EACvB,E,kCCL1B,QAA0B,gC,aCmBnB,MAAMQ,GAAoB+C,EAAAA,EAAAA,eAC/B,MAoCF,EAjCuBC,KACrB,MAAOC,EAAmBC,IAAwB3D,EAAAA,EAAAA,WAAS,IACzDqD,MAGIO,EAA4BA,KAChCD,EAAqBN,IAAiC,EAGlDQ,GAAeC,EAAAA,EAAAA,UAAQ,KACpB,CACLnC,oBAAqBiC,KAEtB,CAACA,KAEE,KAAEV,EAAI,MAAEa,EAAK,UAAEC,IAAcC,EAAAA,EAAAA,IAAsBP,EAAmB,CAC1EQ,KAAmC,IAA7BR,EAAkBS,SAG1B,OACEtD,EAAAA,EAAAA,KAACJ,EAAkB2D,SAAQ,CAACC,MAAOR,EAAajC,UAC9Cc,EAAAA,EAAAA,MAAC4B,EAAAA,EAAS,CAAC3B,UAAU,iBAAgBf,SAAA,CAClCsB,GAAQQ,IAAqB7C,EAAAA,EAAAA,KAACoC,EAAAA,EAAQ,CAACC,KAAMA,IAC7Cc,IAAanD,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,IACpBR,IAASlD,EAAAA,EAAAA,KAAA,MAAAe,SAAI,yCACgB,IAA7B8B,EAAkBS,SACjBtD,EAAAA,EAAAA,KAAA,MAAI8B,UAAWC,EAAUhB,SAAC,6HAGH,C,kICpDjC,SAAgB,gBAAkB,yCAAyC,eAAiB,wCAAwC,sBAAwB,+CAA+C,mBAAqB,6C,aCmBzN,MAAM4C,EAAkB9E,IAA+B,IAAD+E,EAAA,IAA7B,KAAEvB,EAAI,QAAErD,GAAgBH,EACtD,MAAMgF,GAAO/D,EAAAA,EAAAA,IAAeC,EAAAA,IACtB+D,GAAWC,EAAAA,EAAAA,MAcjB,OACElC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAEiC,gBAAgBjD,SAAA,EAChCc,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAEkC,mBAAmBlD,SAAA,EACnCf,EAAAA,EAAAA,KAAA,OAAKgC,KAAS,OAAJK,QAAI,IAAJA,GAAY,QAARuB,EAAJvB,EAAMjB,cAAM,IAAAwC,OAAR,EAAJA,EAAc3B,aAAciC,EAAAA,KACtClE,EAAAA,EAAAA,KAACpB,EAAAA,EAAS,CACRE,eAlBeA,KACb,OAAJ+E,QAAI,IAAJA,GAAAA,EAAMM,KACR3C,EAAAA,EAAAA,IAAgBqC,EAAKM,IAAK,cAAenF,GAEzC8E,EAAS,UACX,EAcM/E,oBAXoBA,KAClB,OAAJ8E,QAAI,IAAJA,GAAAA,EAAMM,MACR1C,EAAAA,EAAAA,IAAqBoC,EAAKM,IAAK,cAAenF,EAChD,EASMA,QAASA,QAGb6C,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAEqC,kBAAkBrD,SAAA,EAClCf,EAAAA,EAAAA,KAAA,MAAAe,SAAS,OAAJsB,QAAI,IAAJA,OAAI,EAAJA,EAAMlB,QACXnB,EAAAA,EAAAA,KAAA,KAAG8B,UAAWC,EAAEsC,eAAetD,SAAM,OAAJsB,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,QACvCtE,EAAAA,EAAAA,KAAA,KAAG8B,UAAWC,EAAEwC,sBAAsBxD,UAC/B,OAAJsB,QAAI,IAAJA,OAAI,EAAJA,EAAMmC,cAAe,uHAGtB,EChCV,EAZwBC,KACtB,MAAM,GAAEvD,IAAOwD,EAAAA,EAAAA,MACT,KAAErC,EAAI,UAAEc,IAAcwB,EAAAA,EAAAA,IAA2BzD,GAEvD,OACEW,EAAAA,EAAAA,MAAC4B,EAAAA,EAAS,CAAC3B,UAAU,iBAAgBf,SAAA,CAClCoC,IAAanD,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,IACpBrB,GAAQnB,IAAMlB,EAAAA,EAAAA,KAAC2D,EAAe,CAACtB,KAAMA,EAAMrD,QAASkC,MAC3C,C","sources":["assets/img/moviePoster.svg","components/heartIcon/HeartIcon.tsx","hooks/useAuth.ts","webpack://aston-react/./src/components/movieCards/CardRows.module.css?b854","webpack://aston-react/./src/components/movieCards/cardItem/MovieCard.module.css?2abc","components/movieCards/cardItem/MovieCard.tsx","components/movieCards/CardRows.tsx","utils/getFavouriteMovies.ts","webpack://aston-react/./src/pages/FavouritesPage/FavouritesPage.module.css?5832","pages/FavouritesPage/FavouritesPage.tsx","webpack://aston-react/./src/pages/MovieSinglePage/MovieSinglePage.module.css?57eb","pages/MovieSinglePage/SinglePageInner.tsx","pages/MovieSinglePage/MovieSinglePage.tsx"],"sourcesContent":["var _rect, _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMoviePoster(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 72,\n    height: 108,\n    viewBox: \"0 0 72 108\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 72,\n    height: 108,\n    rx: 3,\n    fill: \"#D9D9D9\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.233 31.8182H16.7045L20.1648 40.2699H20.2841L23.7443 31.8182H25.2159V42H24.0625V34.2642H23.9631L20.7812 42H19.6676L16.4858 34.2642H16.3864V42H15.233V31.8182ZM36.2789 36.9091C36.2789 37.983 36.085 38.911 35.6973 39.6932C35.3095 40.4754 34.7775 41.0786 34.1014 41.5028C33.4252 41.9271 32.653 42.1392 31.7846 42.1392C30.9163 42.1392 30.144 41.9271 29.4679 41.5028C28.7917 41.0786 28.2598 40.4754 27.872 39.6932C27.4842 38.911 27.2903 37.983 27.2903 36.9091C27.2903 35.8352 27.4842 34.9072 27.872 34.125C28.2598 33.3428 28.7917 32.7396 29.4679 32.3153C30.144 31.8911 30.9163 31.679 31.7846 31.679C32.653 31.679 33.4252 31.8911 34.1014 32.3153C34.7775 32.7396 35.3095 33.3428 35.6973 34.125C36.085 34.9072 36.2789 35.8352 36.2789 36.9091ZM35.0858 36.9091C35.0858 36.0275 34.9383 35.2834 34.6433 34.6768C34.3516 34.0703 33.9556 33.6113 33.4551 33.2997C32.9579 32.9882 32.4011 32.8324 31.7846 32.8324C31.1681 32.8324 30.6097 32.9882 30.1092 33.2997C29.612 33.6113 29.216 34.0703 28.921 34.6768C28.6293 35.2834 28.4835 36.0275 28.4835 36.9091C28.4835 37.7907 28.6293 38.5348 28.921 39.1413C29.216 39.7479 29.612 40.2069 30.1092 40.5185C30.6097 40.83 31.1681 40.9858 31.7846 40.9858C32.4011 40.9858 32.9579 40.83 33.4551 40.5185C33.9556 40.2069 34.3516 39.7479 34.6433 39.1413C34.9383 38.5348 35.0858 37.7907 35.0858 36.9091ZM38.2912 31.8182L41.3139 40.3892H41.4332L44.456 31.8182H45.7486L42.0099 42H40.7372L36.9986 31.8182H38.2912ZM48.5675 31.8182V42H47.3345V31.8182H48.5675ZM51.0396 42V31.8182H57.1845V32.9119H52.2725V36.3523H56.8663V37.446H52.2725V40.9062H57.264V42H51.0396Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.233 59V48.8182H13.6733C14.4721 48.8182 15.125 48.9624 15.6321 49.2507C16.1425 49.5357 16.5204 49.9219 16.7656 50.4091C17.0109 50.8963 17.1335 51.4399 17.1335 52.0398C17.1335 52.6397 17.0109 53.1849 16.7656 53.6754C16.5237 54.166 16.1491 54.5571 15.642 54.8487C15.1349 55.1371 14.4853 55.2812 13.6932 55.2812H11.2273V54.1875H13.6534C14.2003 54.1875 14.6394 54.093 14.9709 53.9041C15.3023 53.7152 15.5426 53.46 15.6918 53.1385C15.8442 52.8137 15.9205 52.4474 15.9205 52.0398C15.9205 51.6321 15.8442 51.2675 15.6918 50.946C15.5426 50.6245 15.3007 50.3726 14.9659 50.1903C14.6312 50.0047 14.187 49.9119 13.6335 49.9119H11.4659V59H10.233ZM27.7106 53.9091C27.7106 54.983 27.5167 55.911 27.1289 56.6932C26.7411 57.4754 26.2092 58.0786 25.533 58.5028C24.8569 58.9271 24.0846 59.1392 23.2163 59.1392C22.3479 59.1392 21.5756 58.9271 20.8995 58.5028C20.2234 58.0786 19.6914 57.4754 19.3036 56.6932C18.9158 55.911 18.7219 54.983 18.7219 53.9091C18.7219 52.8352 18.9158 51.9072 19.3036 51.125C19.6914 50.3428 20.2234 49.7396 20.8995 49.3153C21.5756 48.8911 22.3479 48.679 23.2163 48.679C24.0846 48.679 24.8569 48.8911 25.533 49.3153C26.2092 49.7396 26.7411 50.3428 27.1289 51.125C27.5167 51.9072 27.7106 52.8352 27.7106 53.9091ZM26.5174 53.9091C26.5174 53.0275 26.3699 52.2834 26.0749 51.6768C25.7833 51.0703 25.3872 50.6113 24.8867 50.2997C24.3896 49.9882 23.8327 49.8324 23.2163 49.8324C22.5998 49.8324 22.0413 49.9882 21.5408 50.2997C21.0437 50.6113 20.6476 51.0703 20.3526 51.6768C20.061 52.2834 19.9151 53.0275 19.9151 53.9091C19.9151 54.7907 20.061 55.5348 20.3526 56.1413C20.6476 56.7479 21.0437 57.2069 21.5408 57.5185C22.0413 57.83 22.5998 57.9858 23.2163 57.9858C23.8327 57.9858 24.3896 57.83 24.8867 57.5185C25.3872 57.2069 25.7833 56.7479 26.0749 56.1413C26.3699 55.5348 26.5174 54.7907 26.5174 53.9091ZM35.3519 51.3636C35.2923 50.8598 35.0503 50.4688 34.6261 50.1903C34.2018 49.9119 33.6815 49.7727 33.065 49.7727C32.6142 49.7727 32.2198 49.8456 31.8817 49.9915C31.547 50.1373 31.2852 50.3378 31.0962 50.593C30.9106 50.8482 30.8178 51.1383 30.8178 51.4631C30.8178 51.7348 30.8825 51.9685 31.0117 52.1641C31.1443 52.3563 31.3133 52.517 31.5188 52.6463C31.7243 52.7723 31.9397 52.8767 32.1651 52.9595C32.3905 53.0391 32.5977 53.1037 32.7866 53.1534L33.8207 53.4318C34.0858 53.5014 34.3808 53.5975 34.7056 53.7202C35.0337 53.8428 35.3469 54.0102 35.6452 54.2223C35.9469 54.4311 36.1954 54.6996 36.391 55.0277C36.5865 55.3558 36.6843 55.7585 36.6843 56.2358C36.6843 56.786 36.5401 57.2831 36.2518 57.7273C35.9667 58.1714 35.5491 58.5244 34.9989 58.7862C34.4521 59.0481 33.7875 59.179 33.0053 59.179C32.2762 59.179 31.6448 59.0613 31.1112 58.826C30.5808 58.5907 30.1632 58.2625 29.8583 57.8416C29.5567 57.4207 29.386 56.9318 29.3462 56.375H30.619C30.6521 56.7595 30.7814 57.0777 31.0067 57.3295C31.2354 57.5781 31.5238 57.7637 31.8718 57.8864C32.2231 58.0057 32.601 58.0653 33.0053 58.0653C33.476 58.0653 33.8986 57.9891 34.2731 57.8366C34.6476 57.6809 34.9442 57.4654 35.163 57.1903C35.3817 56.9119 35.4911 56.5871 35.4911 56.2159C35.4911 55.8778 35.3967 55.6027 35.2077 55.3906C35.0188 55.1785 34.7702 55.0062 34.462 54.8736C34.1538 54.741 33.8207 54.625 33.4627 54.5256L32.2099 54.1676C31.4144 53.9389 30.7847 53.6125 30.3207 53.1882C29.8567 52.764 29.6246 52.2088 29.6246 51.5227C29.6246 50.9527 29.7788 50.4555 30.087 50.0312C30.3986 49.6037 30.8162 49.2723 31.3398 49.0369C31.8668 48.7983 32.4551 48.679 33.1048 48.679C33.761 48.679 34.3443 48.7966 34.8548 49.032C35.3652 49.264 35.7695 49.5821 36.0678 49.9865C36.3694 50.3909 36.5285 50.8499 36.5451 51.3636H35.3519ZM38.1547 49.9119V48.8182H45.791V49.9119H42.5893V59H41.3564V49.9119H38.1547ZM47.6939 59V48.8182H53.8388V49.9119H48.9268V53.3523H53.5206V54.446H48.9268V57.9062H53.9183V59H47.6939ZM56.0611 59V48.8182H59.5014C60.2969 48.8182 60.9498 48.9541 61.4602 49.2259C61.9706 49.4943 62.3485 49.8639 62.5938 50.3345C62.839 50.8052 62.9616 51.3404 62.9616 51.9403C62.9616 52.5402 62.839 53.0722 62.5938 53.5362C62.3485 54.0002 61.9723 54.3648 61.4652 54.63C60.9581 54.8918 60.3101 55.0227 59.5213 55.0227H56.7372V53.9091H59.4815C60.0251 53.9091 60.4626 53.8295 60.794 53.6705C61.1288 53.5114 61.3707 53.286 61.5199 52.9943C61.6723 52.6993 61.7486 52.348 61.7486 51.9403C61.7486 51.5327 61.6723 51.1764 61.5199 50.8714C61.3674 50.5665 61.1238 50.3312 60.7891 50.1655C60.4543 49.9964 60.0118 49.9119 59.4616 49.9119H57.294V59H56.0611ZM60.8537 54.4261L63.3594 59H61.9276L59.4616 54.4261H60.8537Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMoviePoster);\nexport default __webpack_public_path__ + \"static/media/moviePoster.9f9e2a1a4a3269238a821f77b4266b65.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from \"react\"\r\n\r\nimport { useContext } from \"react\"\r\n\r\nimport { toggleFavouriteMovieLS } from \"../../utils/localStorage\"\r\nimport { FavouritesContext } from \"../../pages/FavouritesPage/FavouritesPage\"\r\nimport { useAuth } from \"../../hooks/useAuth\"\r\n\r\ntype Props = {\r\n  addToFavourite: () => void\r\n  removeFromFavourite: () => void\r\n  movieId: string\r\n}\r\n\r\nexport const HeartIcon = ({\r\n  addToFavourite,\r\n  removeFromFavourite,\r\n  movieId,\r\n}: Props) => {\r\n  const [isLike, setLike] = useState<boolean>(() => {\r\n    const likedMovies = localStorage.getItem(\"likedMovies\")\r\n    if (likedMovies) {\r\n      const likedMoviesArr = JSON.parse(likedMovies)\r\n      return likedMoviesArr.includes(movieId)\r\n    }\r\n    return false\r\n  })\r\n  const context = useContext(FavouritesContext)\r\n  const isAuth = useAuth()\r\n\r\n  const handleClick = (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => {\r\n    e.preventDefault()\r\n\r\n    if (isLike) {\r\n      removeFromFavourite()\r\n    } else {\r\n      addToFavourite()\r\n    }\r\n\r\n    if (isAuth) {\r\n      toggleFavouriteMovieLS(movieId)\r\n      setLike(!isLike)\r\n    }\r\n\r\n    if (context && context?.removeFromFavorites) {\r\n      context.removeFromFavorites()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      fill={isLike ? \"#f50\" : \"none\"}\r\n      stroke=\"#f50\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      onClick={handleClick}\r\n    >\r\n      <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3 9 3 10.54 3.89 12 5.35 13.46 3.89 15 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54z\" />\r\n    </svg>\r\n  )\r\n}\r\n","import { User } from \"../types/User\"\r\n\r\nimport { useAppSelector, userSelector } from \"./useAppSelector\"\r\n\r\nexport const useAuth = (): User | boolean => {\r\n  const user = useAppSelector(userSelector)\r\n\r\n  if (user) {\r\n    return user\r\n  }\r\n\r\n  return false\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardRows\":\"CardRows_cardRows__mvQH0\"};","// extracted by mini-css-extract-plugin\nexport default {\"movieCard\":\"MovieCard_movieCard__CNoP6\"};","import { Link } from \"react-router-dom\"\r\n\r\nimport { useCallback } from \"react\"\r\n\r\nimport { Movie } from \"../../../types/Movies\"\r\nimport moviePosterDefault from \"../../../assets/img/moviePoster.svg\"\r\nimport { HeartIcon } from \"../../heartIcon/HeartIcon\"\r\nimport {\r\n  deleteUserDataFromDB,\r\n  setUserDataToDB,\r\n} from \"../../../firebase/database/database\"\r\nimport { useAppSelector, userIdSelector } from \"../../../hooks/useAppSelector\"\r\n\r\nimport s from \"./MovieCard.module.css\"\r\n\r\nexport const MovieCard = ({ id, name, poster }: Movie) => {\r\n  const userId = useAppSelector(userIdSelector)\r\n  const addToFavourite = useCallback(() => {\r\n    if (userId) {\r\n      setUserDataToDB(userId, \"likedMovies\", id)\r\n    }\r\n  }, [userId])\r\n\r\n  const removeFromFavourite = useCallback(() => {\r\n    if (userId) {\r\n      deleteUserDataFromDB(userId, \"likedMovies\", id)\r\n    }\r\n  }, [])\r\n  return (\r\n    <Link to={`/movie/${id}`}>\r\n      <article className={s.movieCard}>\r\n        <img src={poster.previewUrl || moviePosterDefault} />\r\n        <h2>{name}</h2>\r\n        {userId && (\r\n          <HeartIcon\r\n            addToFavourite={addToFavourite}\r\n            removeFromFavourite={removeFromFavourite}\r\n            movieId={String(id)}\r\n          />\r\n        )}\r\n      </article>\r\n    </Link>\r\n  )\r\n}\r\n","import { Movie } from \"../../types/Movies\"\r\n\r\nimport s from \"./CardRows.module.css\"\r\nimport { MovieCard } from \"./cardItem/MovieCard\"\r\n\r\nexport const CardRows = ({ data }: { data: Movie[] }) => {\r\n  return (\r\n    <div className={s.cardRows}>\r\n      {data.map((movie) => (\r\n        <MovieCard\r\n          id={movie.id}\r\n          name={movie.name}\r\n          poster={movie.poster}\r\n          key={movie.id}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import { formatIdsQueryString } from \"./dataFormatting\"\r\nimport { getDataFromLS } from \"./localStorage\"\r\n\r\nexport const getFavouriteMoviesFormattedIds = (): string => {\r\n  const likedMovies = getDataFromLS(\"likedMovies\")\r\n  const moviesStringArray = formatIdsQueryString(likedMovies)\r\n  return moviesStringArray\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Heading\":\"FavouritesPage_Heading__-Fk9T\"};","import { useState } from \"react\"\r\n\r\nimport { createContext } from \"react\"\r\n\r\nimport { useMemo } from \"react\"\r\n\r\nimport { Loader } from \"../../components/loader/Loader\"\r\n\r\nimport { getFavouriteMoviesFormattedIds } from \"../../utils/getFavouriteMovies\"\r\n\r\nimport { CardRows } from \"../../components/movieCards/CardRows\"\r\nimport { Container } from \"../../components/layout/container/Container\"\r\nimport { useGetMoviesByIdQuery } from \"../../store/moviesQueryApi\"\r\n\r\nimport s from \"./FavouritesPage.module.css\"\r\n\r\nexport type FavouritesContextType = {\r\n  removeFromFavorites?: () => void\r\n}\r\n\r\nexport const FavouritesContext = createContext<null | FavouritesContextType>(\r\n  null,\r\n)\r\n\r\nconst FavouritesPage = () => {\r\n  const [idsWithFormatting, setIdsWithFormatting] = useState(() =>\r\n    getFavouriteMoviesFormattedIds(),\r\n  )\r\n\r\n  const handleRemoveFromFavorites = () => {\r\n    setIdsWithFormatting(getFavouriteMoviesFormattedIds())\r\n  }\r\n\r\n  const contextValue = useMemo(() => {\r\n    return {\r\n      removeFromFavorites: handleRemoveFromFavorites,\r\n    }\r\n  }, [handleRemoveFromFavorites])\r\n\r\n  const { data, error, isLoading } = useGetMoviesByIdQuery(idsWithFormatting, {\r\n    skip: idsWithFormatting.length === 0,\r\n  })\r\n\r\n  return (\r\n    <FavouritesContext.Provider value={contextValue}>\r\n      <Container className=\"maximum-height\">\r\n        {data && idsWithFormatting && <CardRows data={data} />}\r\n        {isLoading && <Loader />}\r\n        {error && <h1>Ошибка</h1>}\r\n        {idsWithFormatting.length === 0 && (\r\n          <h1 className={s.Heading}>Нет избранных фильмов</h1>\r\n        )}\r\n      </Container>\r\n    </FavouritesContext.Provider>\r\n  )\r\n}\r\n\r\nexport default FavouritesPage\r\n","// extracted by mini-css-extract-plugin\nexport default {\"singlePageInner\":\"MovieSinglePage_singlePageInner__oiGc7\",\"singlePageYear\":\"MovieSinglePage_singlePageYear__AwO1h\",\"singlePageDescription\":\"MovieSinglePage_singlePageDescription__x89b3\",\"singlePageLeftSide\":\"MovieSinglePage_singlePageLeftSide__5TYYb\"};","import { useNavigate } from \"react-router-dom\"\r\n\r\nimport { Movie } from \"../../types/Movies\"\r\n\r\nimport defaultPosterUrl from \"../../assets/img/moviePoster.svg\"\r\nimport { HeartIcon } from \"../../components/heartIcon/HeartIcon\"\r\nimport { useAppSelector, userSelector } from \"../../hooks/useAppSelector\"\r\n\r\nimport {\r\n  deleteUserDataFromDB,\r\n  setUserDataToDB,\r\n} from \"../../firebase/database/database\"\r\n\r\nimport s from \"./MovieSinglePage.module.css\"\r\n\r\ninterface Props {\r\n  data: Movie\r\n  movieId: string\r\n}\r\n\r\nexport const SinglePageInner = ({ data, movieId }: Props) => {\r\n  const user = useAppSelector(userSelector)\r\n  const navigate = useNavigate()\r\n  const addToFavourite = () => {\r\n    if (user?.uid) {\r\n      setUserDataToDB(user.uid, \"likedMovies\", movieId)\r\n    } else {\r\n      navigate(\"/signin\")\r\n    }\r\n  }\r\n\r\n  const removeFromFavourite = () => {\r\n    if (user?.uid) {\r\n      deleteUserDataFromDB(user.uid, \"likedMovies\", movieId)\r\n    }\r\n  }\r\n  return (\r\n    <div className={s.singlePageInner}>\r\n      <div className={s.singlePageLeftSide}>\r\n        <img src={data?.poster?.previewUrl || defaultPosterUrl} />\r\n        <HeartIcon\r\n          addToFavourite={addToFavourite}\r\n          removeFromFavourite={removeFromFavourite}\r\n          movieId={movieId}\r\n        />\r\n      </div>\r\n      <div className={s.singlePageContent}>\r\n        <h1>{data?.name}</h1>\r\n        <p className={s.singlePageYear}>{data?.year}</p>\r\n        <p className={s.singlePageDescription}>\r\n          {data?.description || \"Описание отсутсвует\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useParams } from \"react-router-dom\"\r\n\r\nimport { Container } from \"../../components/layout/container/Container\"\r\nimport { useGetSingleMovieByIdQuery } from \"../../store/moviesQueryApi\"\r\n\r\nimport { Loader } from \"../../components/loader/Loader\"\r\n\r\nimport { SinglePageInner } from \"./SinglePageInner\"\r\n\r\nconst MovieSinglePage = () => {\r\n  const { id } = useParams()\r\n  const { data, isLoading } = useGetSingleMovieByIdQuery(id)\r\n\r\n  return (\r\n    <Container className=\"maximum-height\">\r\n      {isLoading && <Loader />}\r\n      {data && id && <SinglePageInner data={data} movieId={id} />}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default MovieSinglePage\r\n"],"names":["HeartIcon","_ref","addToFavourite","removeFromFavourite","movieId","isLike","setLike","useState","likedMovies","localStorage","getItem","JSON","parse","includes","context","useContext","FavouritesContext","isAuth","useAppSelector","userSelector","_jsx","xmlns","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","onClick","e","preventDefault","toggleFavouriteMovieLS","removeFromFavorites","children","d","MovieCard","id","name","poster","userId","userIdSelector","useCallback","setUserDataToDB","deleteUserDataFromDB","Link","to","concat","_jsxs","className","s","src","previewUrl","moviePosterDefault","String","CardRows","data","map","movie","getFavouriteMoviesFormattedIds","getDataFromLS","formatIdsQueryString","createContext","FavouritesPage","idsWithFormatting","setIdsWithFormatting","handleRemoveFromFavorites","contextValue","useMemo","error","isLoading","useGetMoviesByIdQuery","skip","length","Provider","value","Container","Loader","SinglePageInner","_data$poster","user","navigate","useNavigate","singlePageInner","singlePageLeftSide","defaultPosterUrl","uid","singlePageContent","singlePageYear","year","singlePageDescription","description","MovieSinglePage","useParams","useGetSingleMovieByIdQuery"],"sourceRoot":""}